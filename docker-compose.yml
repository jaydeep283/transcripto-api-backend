version: "3.8"

services:
    # PostgreSQL Database
    postgres:
        image: postgres:15
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: transcription_db
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5

    # Redis
    redis:
        image: redis:7-alpine
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data

    # RabbitMQ
    rabbitmq:
        image: rabbitmq:3.12-management
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        ports:
            - "5672:5672"
            - "15672:15672" # Management UI
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 10s
            retries: 5

    # FastAPI Application
    web:
        build: .
        ports:
            - "8000:8000"
        environment:
            - DATABASE_URL=postgresql://postgres:postgres@postgres/transcription_db
            - REDIS_URL=redis://redis:6379
            - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_REGION=${AWS_REGION}
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
            rabbitmq:
                condition: service_healthy
        volumes:
            - .:/app
        command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

    # Celery Worker
    celery-worker:
        build: .
        environment:
            - DATABASE_URL=postgresql://postgres:postgres@postgres/transcription_db
            - REDIS_URL=redis://redis:6379
            - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
            rabbitmq:
                condition: service_healthy
        volumes:
            - .:/app
        command: celery -A app.core.celery_app worker --loglevel=info

    # Celery Flower (Optional - for monitoring)
    flower:
        build: .
        environment:
            - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
            - CELERY_RESULT_BACKEND=redis://redis:6379/0
        ports:
            - "5555:5555"
        depends_on:
            - redis
            - rabbitmq
        volumes:
            - .:/app
        command: celery -A app.core.celery_app flower --port=5555

volumes:
    postgres_data:
    redis_data:
    rabbitmq_data:
